// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1

package repository

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error)
	CreateAccountFramework(ctx context.Context, arg CreateAccountFrameworkParams) (AccountFramework, error)
	CreateAccountTags(ctx context.Context, arg CreateAccountTagsParams) (AccountTag, error)
	CreateBookmark(ctx context.Context, arg CreateBookmarkParams) (Bookmark, error)
	CreateFollow(ctx context.Context, arg CreateFollowParams) (Follow, error)
	CreateHackathon(ctx context.Context, arg CreateHackathonParams) (Hackathon, error)
	CreateHackathonStatusTag(ctx context.Context, arg CreateHackathonStatusTagParams) (HackathonStatusTag, error)
	CreateRate(ctx context.Context, arg CreateRateParams) (RateEntry, error)
	CreateRoom(ctx context.Context, arg CreateRoomParams) (Room, error)
	CreateRoomsAccounts(ctx context.Context, arg CreateRoomsAccountsParams) (RoomsAccount, error)
	DeleteAccountFrameworksByUserID(ctx context.Context, userID string) error
	DeleteAccounttagsByUserID(ctx context.Context, userID string) error
	DeleteFrameworksByID(ctx context.Context, frameworkID int32) error
	DeleteHackathonByID(ctx context.Context, hackathonID int32) error
	DeleteHackathonStatusTagsByHackathonID(ctx context.Context, hackathonID int32) error
	DeleteStatusTagByStatusID(ctx context.Context, statusID int32) error
	DeleteTechTagByID(ctx context.Context, techTagID int32) error
	GetAccountByEmail(ctx context.Context, email string) (GetAccountByEmailRow, error)
	GetAccountByID(ctx context.Context, userID string) (GetAccountByIDRow, error)
	GetFrameworksByID(ctx context.Context, frameworkID int32) (Framework, error)
	GetHackathonByID(ctx context.Context, hackathonID int32) (Hackathon, error)
	GetHackathonStatusTagsByHackathonID(ctx context.Context, hackathonID int32) ([]HackathonStatusTag, error)
	GetLocateByID(ctx context.Context, locateID int32) (Locate, error)
	GetRoomsAccountsByRoomID(ctx context.Context, roomID uuid.UUID) ([]GetRoomsAccountsByRoomIDRow, error)
	GetRoomsByID(ctx context.Context, roomID uuid.UUID) (Room, error)
	GetStatusTagByStatusID(ctx context.Context, statusID int32) (StatusTag, error)
	GetStatusTagsByHackathonID(ctx context.Context, hackathonID int32) ([]StatusTag, error)
	GetTechTagByID(ctx context.Context, techTagID int32) (TechTag, error)
	ListAccountFrameworksByUserID(ctx context.Context, userID string) ([]ListAccountFrameworksByUserIDRow, error)
	ListAccountTagsByUserID(ctx context.Context, userID string) ([]ListAccountTagsByUserIDRow, error)
	ListAccounts(ctx context.Context, arg ListAccountsParams) ([]ListAccountsRow, error)
	ListBookmarkByUserID(ctx context.Context, userID string) ([]Bookmark, error)
	ListFollowByFromUserID(ctx context.Context, fromUserID string) ([]Follow, error)
	ListFollowByToUserID(ctx context.Context, toUserID string) ([]Follow, error)
	ListFrameworks(ctx context.Context, limit int32) ([]Framework, error)
	ListHackathons(ctx context.Context, arg ListHackathonsParams) ([]Hackathon, error)
	ListLocates(ctx context.Context) ([]Locate, error)
	ListRate(ctx context.Context, arg ListRateParams) ([]RateEntry, error)
	ListRoom(ctx context.Context, limit int32) ([]Room, error)
	ListStatusTags(ctx context.Context) ([]StatusTag, error)
	ListTechTag(ctx context.Context) ([]TechTag, error)
	RemoveAccountInRoom(ctx context.Context, arg RemoveAccountInRoomParams) error
	RemoveFollow(ctx context.Context, arg RemoveFollowParams) error
	SoftDeleteAccount(ctx context.Context, userID string) (Account, error)
	SoftDeleteRoomByID(ctx context.Context, roomID uuid.UUID) (Room, error)
	SoftRemoveBookmark(ctx context.Context, arg SoftRemoveBookmarkParams) (Bookmark, error)
	UpdateAccount(ctx context.Context, arg UpdateAccountParams) (Account, error)
	UpdateFrameworksByID(ctx context.Context, arg UpdateFrameworksByIDParams) (Framework, error)
	UpdateRateByUserID(ctx context.Context, arg UpdateRateByUserIDParams) (Account, error)
	UpdateRoomByID(ctx context.Context, arg UpdateRoomByIDParams) (Room, error)
	UpdateStatusTagByStatusID(ctx context.Context, status string) (StatusTag, error)
	UpdateTechTagByID(ctx context.Context, language string) (TechTag, error)
}

var _ Querier = (*Queries)(nil)
