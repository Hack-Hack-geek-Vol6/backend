// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0

package db

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type AccountFrameworks struct {
	AccountID   string `json:"account_id"`
	FrameworkID int32  `json:"framework_id"`
}

type AccountPastWorks struct {
	Opus   int32  `json:"opus"`
	UserID string `json:"user_id"`
}

type AccountTags struct {
	UserID    string `json:"user_id"`
	TechTagID int32  `json:"tech_tag_id"`
}

type Accounts struct {
	UserID          string         `json:"user_id"`
	Username        string         `json:"username"`
	Icon            []byte         `json:"icon"`
	ExplanatoryText sql.NullString `json:"explanatory_text"`
	LocateID        int32          `json:"locate_id"`
	Rate            int32          `json:"rate"`
	HashedPassword  sql.NullString `json:"hashed_password"`
	Email           string         `json:"email"`
	CreateAt        time.Time      `json:"create_at"`
	ShowLocate      bool           `json:"show_locate"`
	ShowRate        bool           `json:"show_rate"`
	UpdateAt        time.Time      `json:"update_at"`
}

type Awards struct {
	AwardID int32  `json:"award_id"`
	Name    string `json:"name"`
}

type Bookmarks struct {
	HackathonID int32  `json:"hackathon_id"`
	UserID      string `json:"user_id"`
}

type Follows struct {
	ToUserID   string `json:"to_user_id"`
	FromUserID string `json:"from_user_id"`
}

type Frameworks struct {
	FrameworkID int32  `json:"framework_id"`
	TechTagID   int32  `json:"tech_tag_id"`
	Framework   string `json:"framework"`
}

type HackathonStatusTags struct {
	HackathonID int32 `json:"hackathon_id"`
	StatusID    int32 `json:"status_id"`
}

type Hackathons struct {
	HackathonID int32     `json:"hackathon_id"`
	Name        string    `json:"name"`
	Icon        []byte    `json:"icon"`
	Description string    `json:"description"`
	Link        string    `json:"link"`
	Expired     time.Time `json:"expired"`
	StartDate   time.Time `json:"start_date"`
	Term        int32     `json:"term"`
}

type HackathonsData struct {
	Opus        int32 `json:"opus"`
	AwardID     int32 `json:"award_id"`
	HackathonID int32 `json:"hackathon_id"`
}

type Locates struct {
	LocateID int32  `json:"locate_id"`
	Name     string `json:"name"`
}

type PastWorkFrameworks struct {
	Opus        int32 `json:"opus"`
	FrameworkID int32 `json:"framework_id"`
}

type PastWorkTags struct {
	Opus      int32 `json:"opus"`
	TechTagID int32 `json:"tech_tag_id"`
}

type PastWorks struct {
	Opus            int32  `json:"opus"`
	ThumbnailImage  []byte `json:"thumbnail_image"`
	ExplanatoryText string `json:"explanatory_text"`
}

type RateEntries struct {
	UserID   string    `json:"user_id"`
	Rate     int32     `json:"rate"`
	CreateAt time.Time `json:"create_at"`
}

type Rooms struct {
	RoomID      uuid.UUID `json:"room_id"`
	HackathonID int32     `json:"hackathon_id"`
	Title       string    `json:"title"`
	Description string    `json:"description"`
	MemberLimit int32     `json:"member_limit"`
	IsStatus    bool      `json:"is_status"`
}

type RoomsAccounts struct {
	UserID string    `json:"user_id"`
	RoomID uuid.UUID `json:"room_id"`
}

type RoomsFrameworks struct {
	RoomID      uuid.UUID `json:"room_id"`
	FrameworkID int32     `json:"framework_id"`
}

type RoomsTechTags struct {
	RoomID    uuid.UUID `json:"room_id"`
	TechTagID int32     `json:"tech_tag_id"`
}

type StatusTags struct {
	StatusID int32  `json:"status_id"`
	Status   string `json:"status"`
}

type TechTags struct {
	TechTagID int32  `json:"tech_tag_id"`
	Language  string `json:"language"`
}
