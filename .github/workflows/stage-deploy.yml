name: Deploy to Staging

on:
  push:
    branches: [ develop ]
permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  issues: write
  packages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - shell: bash
      run: |
        rm app.env && touch app.env
        echo "${{ secrets.STAGE_APP_ENV }}" >> app.env
        cat app.env

    - name: Translate secrets of base64 into json
      env:
        JSON_DECODE: ${{ secrets.CREDENTIALS_JSON }}

      run: |
        echo -n $JSON_DECODE | base64 --decode > ./serviceAccount.json

    - uses: docker/login-action@v1
      with:
        registry: ${{ secrets.HARBOR_REGISTRY  }}
        username: ${{ secrets.HARBOR_USERNAME  }}
        password: ${{ secrets.HARBOR_PASSWORD }}

    - name: BuildAndPushImageOnHarbor
      run: |
        docker build ./ -t ${{ secrets.HARBOR_REGISTRY  }}/hackhack/hackhack-backend:${{ github.run_number }}
        docker push ${{ secrets.HARBOR_REGISTRY  }}/hackhack/hackhack-backend:${{ github.run_number }}
    - name: Install yq
      run: |
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod a+x /usr/local/bin/yq

    - name: Push to Repo
      run: |
        git config --global user.email ${{ secrets.EMAIL_GITHUB }}
        git config --global user.name ${{ secrets.USERNAME_GITHUB }}
        
        cd config/manifest/stage

        yq -i '.spec.template.spec.containers[0].image = "${{ secrets.HARBOR_REGISTRY  }}/hackhack/hackhack-backend:${{ github.run_number }}"' 'deployment.yaml'

        if (git diff --shortstat | grep '[0-9]'); then \
          git add .; \
          git commit -m "Updated by GitHub Actions"; \
          git push origin develop; \
        fi
