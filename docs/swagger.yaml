basePath: /v1
definitions:
  models.CasbinPolicy:
    properties:
      PType:
        type: string
      V0:
        type: string
      V1:
        type: string
      V2:
        type: string
      V3:
        type: string
    type: object
  models.RbacPolicy:
    properties:
      p_type:
        type: string
      policy_id:
        type: integer
      v0:
        type: integer
      v1:
        type: string
      v2:
        type: string
      v3:
        type: string
    type: object
  request.CreateHackathon:
    properties:
      expired:
        type: string
      link:
        type: string
      name:
        type: string
      start_date:
        type: string
      statuses[]:
        items:
          type: integer
        type: array
      term:
        type: integer
    required:
    - expired
    - link
    - name
    - start_date
    - term
    type: object
  request.CreateHackathonProposal:
    properties:
      url:
        type: string
    type: object
  request.CreateRbacPolicy:
    properties:
      policies:
        items:
          $ref: '#/definitions/models.CasbinPolicy'
        type: array
    type: object
  request.CreateStatusTag:
    properties:
      status:
        type: string
    type: object
  request.InitAdmin:
    properties:
      init_admin_token:
        type: string
      name:
        type: string
    required:
    - init_admin_token
    - name
    type: object
  request.UpdateStatusTag:
    properties:
      id:
        type: integer
      status:
        type: string
    type: object
  response.CreateHackathon:
    properties:
      expired:
        type: string
      hackathon_id:
        type: string
      icon:
        type: string
      link:
        type: string
      name:
        type: string
      start_date:
        type: string
      status_tags:
        items:
          $ref: '#/definitions/response.StatusTag'
        type: array
      term:
        type: integer
    type: object
  response.CreateHackathonProposal:
    properties:
      hackathon_proposal_id:
        type: integer
      url:
        type: string
    type: object
  response.CreateRbacPolicy:
    properties:
      id:
        items:
          type: integer
        type: array
    type: object
  response.DeleteAllRbacPolicies:
    properties:
      message:
        type: string
    type: object
  response.DeleteHackathon:
    properties:
      hackathon_id:
        type: string
    type: object
  response.DeleteRbacPolicy:
    properties:
      policy_id:
        type: integer
    type: object
  response.GetHackathon:
    properties:
      expired:
        type: string
      hackathon_id:
        type: string
      icon:
        type: string
      link:
        type: string
      name:
        type: string
      start_date:
        type: string
      status_tags:
        items:
          $ref: '#/definitions/response.StatusTag'
        type: array
      term:
        type: integer
    type: object
  response.ListRbacPolicies:
    properties:
      policies:
        items:
          $ref: '#/definitions/models.RbacPolicy'
        type: array
    type: object
  response.StatusTag:
    properties:
      id:
        type: integer
      status:
        type: string
    type: object
  response.User:
    properties:
      name:
        type: string
      password:
        type: string
      user_id:
        type: string
    type: object
host: api-dev.hack-portal.com
info:
  contact:
    email: oogiriminister@gmail.com
    name: murasame29
    url: https://twitter.com/fresh_salmon256
  description: Hack-Portal Backend API serice
  license:
    name: No-license
  termsOfService: https://hc-dev.seafood-dev.com
  title: Hack-Portal Backend API
  version: 0.1.0
paths:
  /hackathon-proposals:
    post:
      description: Create Hackathon Proposal
      parameters:
      - description: request body
        in: body
        name: CreateHackathonProposalRequest
        required: true
        schema:
          $ref: '#/definitions/request.CreateHackathonProposal'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/response.CreateHackathonProposal'
        "400":
          description: error response
        "500":
          description: error response
      summary: Create Hackathon Proposal
      tags:
      - HackathonProposal
  /hackathons:
    get:
      description: List Hackathons
      parameters:
      - description: 期間が長いかどうか？
        in: query
        name: longTerm
        type: boolean
      - description: 締め切りが近いかどうか？
        in: query
        name: nearDeadline
        type: boolean
      - description: 新着かどうか？
        in: query
        name: new
        type: boolean
      - in: query
        name: pageID
        type: integer
      - in: query
        name: pageSize
        type: integer
      - collectionFormat: csv
        description: タグ
        in: query
        items:
          type: integer
        name: tags
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            items:
              $ref: '#/definitions/response.GetHackathon'
            type: array
        "400":
          description: error response
        "500":
          description: error response
      summary: List Hackathons
      tags:
      - Hackathon
    post:
      description: Create Hackathon
      parameters:
      - description: request body
        in: body
        name: CreateHackathonRequest
        required: true
        schema:
          $ref: '#/definitions/request.CreateHackathon'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/response.CreateHackathon'
        "400":
          description: error response
        "500":
          description: error response
      summary: Create Hackathon
      tags:
      - Hackathon
  /hackathons/{hackathon_id}:
    delete:
      description: Delete Hackathons
      parameters:
      - description: request body
        in: path
        name: hackathon_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/response.DeleteHackathon'
        "400":
          description: error response
        "500":
          description: error response
      summary: Delete Hackathons
      tags:
      - Hackathon
  /init_admin:
    post:
      description: init admin
      parameters:
      - description: request body
        in: body
        name: InitAdmin
        required: true
        schema:
          $ref: '#/definitions/request.InitAdmin'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/response.User'
        "400":
          description: error response
        "500":
          description: error response
      summary: init admin
      tags:
      - User
  /rbac:
    delete:
      description: DeleteAll Policies
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/response.DeleteAllRbacPolicies'
        "400":
          description: error response
        "500":
          description: error response
      summary: DeleteAll Policies
      tags:
      - RBACPolicy
    get:
      description: List Policies
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: act
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: eft
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: obj
        type: array
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: sub
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/response.ListRbacPolicies'
        "400":
          description: error response
        "500":
          description: error response
      summary: List Policies
      tags:
      - RBACPolicy
    post:
      description: Create RBACPolicy
      parameters:
      - description: request body
        in: body
        name: CreatePolicy
        required: true
        schema:
          $ref: '#/definitions/request.CreateRbacPolicy'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/response.CreateRbacPolicy'
        "400":
          description: error response
        "500":
          description: error response
      summary: Create RBACPolicy
      tags:
      - RBACPolicy
  /rbac/{policy_id}:
    delete:
      description: Delete Policies
      parameters:
      - description: request query
        in: path
        name: policy_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/response.DeleteRbacPolicy'
        "400":
          description: error response
        "500":
          description: error response
      summary: Delete Policies
      tags:
      - RBACPolicy
  /status_tags:
    get:
      description: Get all StatusTag
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            items:
              $ref: '#/definitions/response.StatusTag'
            type: array
        "400":
          description: error response
        "500":
          description: error response
      summary: Get all StatusTag
      tags:
      - StatusTag
    post:
      description: Create a new StatusTag
      parameters:
      - description: request body
        in: body
        name: CreateStatusTagRequest
        required: true
        schema:
          $ref: '#/definitions/request.CreateStatusTag'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/response.StatusTag'
        "400":
          description: error response
        "500":
          description: error response
      summary: Create a new StatusTag
      tags:
      - StatusTag
  /status_tags/{id}:
    put:
      description: Update StatusTag by id
      parameters:
      - description: status tag id
        in: path
        name: id
        required: true
        type: integer
      - description: request body
        in: body
        name: CreateStatusTagRequest
        required: true
        schema:
          $ref: '#/definitions/request.UpdateStatusTag'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            $ref: '#/definitions/response.StatusTag'
        "400":
          description: error response
        "500":
          description: error response
      summary: Update StatusTag by id
      tags:
      - StatusTag
swagger: "2.0"
